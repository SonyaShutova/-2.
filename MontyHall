import random
from tkinter import StringVar, Label, Tk, Entry, messagebox


class MontyHallSimulator:
    def __init__(self, window):
        self.window = window
        self.window.geometry("400x100")
        self.window.title("Monty hall simulation")
        self.window.resizable(0, 0)

        self.same_choice = StringVar()
        self.switched_choice = StringVar()
        self.same_choice.set(0)
        self.switched_choice.set(0)

        self.no_sample = Entry()
        self.no_sample.place(x=100, y=70)
        self.no_sample.bind("<Return>", self.validate_input)  # Изменение: привязка к функции validate_input

        Label(text="Same choice").place(x=80, y=8)
        Label(text="Switched choice").place(x=80, y=40)
        Label(textvariable=self.same_choice, font=(15)).place(x=180, y=8)
        Label(textvariable=self.switched_choice, font=(15)).place(x=180, y=40)

    def validate_input(self, event):  # Добавление функции для проверки вводимых данных
        try:
            samples = int(self.no_sample.get())
            if samples > 0:
                self.simulate(event)  # Вызываем функцию simulate только в случае успешной проверки вводимых данных
            else:
                messagebox.showerror("Error", "Число не должно быть меньше  0 или равно ему.")
        except ValueError:
            messagebox.showerror("Error", "Неправильный ввод. Нужно вводить только число!")

    def simulate(self, event):
        same_choice_result = 0
        switched_choice_result = 0
        samples = int(self.no_sample.get())
        doors = ["gold", "goat", "bed"]
        for _ in range(samples):
            simulated_doors = doors.copy()
            random.shuffle(simulated_doors)
            first_choice = random.choice(simulated_doors)
            simulated_doors.remove(first_choice)
            opened_door = (
                simulated_doors[0] if simulated_doors[0] != "gold" else simulated_doors[1]
            )
            simulated_doors.remove(opened_door)
            switched_second_choice = simulated_doors[0]
            if first_choice == "gold":
                same_choice_result += 1
                self.same_choice.set(same_choice_result)
            elif switched_second_choice == "gold":
                switched_choice_result += 1
                self.switched_choice.set(switched_choice_result)
            else:
                raise ValueError("Unexpected condition occurred during simulation.")


if __name__ == "__main__":
    window = Tk()
    MontyHallSimulator(window)
    window.mainloop()
